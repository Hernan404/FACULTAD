program EJadP4P2;
const 
    dimf = 10000
type 
    computadoras = record
        codigo:integer;
        version:real;
        cantpaquetes:integer;
        cantcuentas:integer;
    end;

    vector = array [1..dimf] of computadoras;


procedure cargarVector(var v:vector; var diml:integer);
var 
    c:computadoras;
    x,y:integer;
begin 
    for x:= 1 to dimf do 
        v[x].codigo:= 0;

    leer(c);

    while (c.codigo <> -1) and (diml < dimf) do begin 
        diml:= diml +1;
        x:= 1;
    if (x <= dimf) then 
        if (x < dimf) then 
        for y:= dimf downto x do 
            v[y]:= v[y - 1]
        v[x]:= c;
    leer(c);
    end;
end;


function puntoA (c:computadoras; v:vector):boolean;
begin 
    puntoA:= (v[x].version = 18.04) or (v[x].version = 16.04);
end;

procedure puntoC (var cumpleC:real; c:computadoras; v:vector; var max:integer);
begin 
    if (v[x].cantpaquetes > max) then begin 
        max:= v[x].cantpaquetes;
        cumpleC:= v[x]c.version;
    end;
end;



var 
    v:vector;
    c:computadoras;
    max:integer;
    cantcumpleA:integer;
    x:integer;
    cumpleC:real;
    promedio:real;
begin 
    promedio:= 0;
    cumpleC:= 0;
    max:= -1;
    cantcumpleA:= 0;

    while (c.codigo <> -1) do begin 
        leer(c);
        for x:= 1 to dimf do begin 
            if puntoA(c,v) then begin 
                cantcumpleA:= cantcumpleA +1;
            end;

            promedio:= v[x].cantcuentas/dimf;
            puntoC(cumpleC,c,v,max);
        end;
end.

